from bson import json_util
from flask import Blueprint, Response, request
from api.v1.output import make_output
import json
from bson.json_util import dumps
from Application.Function.Connect_Database import get_exploit_cve

Exploit = Blueprint("Exploit", __name__)

@Exploit.route('/getall', methods=['GET'])
def get_all_poc_check(): 
    [status, data] = get_exploit_cve({})
    if data.count() == 0 : 
        raise Exception(status)
    result = []
    for i in data: 
        i['_id'] = str(i['_id'])
        result.append(i)
    if status:
        return Response(make_output(data=result, message="success"), mimetype="application/json", status=200)
    else: 
        return Response(make_output(data=result, message="fail"), mimetype="application/json", status=404)

@Exploit.route("/get", methods=['POST'])
def get_answer_poc(): 
    try: 
        if "process_id" in request.form: 
            process_id = request.form['process_id']
            query = {}
            query['_id_process'] = process_id
            status, data = get_exploit_cve(query)
            if status: 
                data = data[0]
            result = json.loads(dumps(data))
            result['_id'] = str(result['_id'])
            return Response(make_output(data=result, message="success"), mimetype="application/json", status=200)
        else: 
            raise Exception("invalid process id")
    except Exception as e: 
        return Response(make_output(data=str(e), message="fail"), mimetype="application/json", status=404)
