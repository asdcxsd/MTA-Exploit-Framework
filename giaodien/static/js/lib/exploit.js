"use strict"; 
var Recon_input; 
var exploit_id; 
var id_process_detail; 
var ToolsExploit = [];
$(document).ready(function(){
    renderReconDataOption();
    renderExploitTools(); 
    var activeTab = window.location.hash;
    if(activeTab.includes("~")){
        var temp = activeTab.split("~"); 
        $(temp[0])[0].click();
        renderExploitDetailModal(temp[1]); 
    }else{
        $( activeTab )[0].click();
    }
})

function renderReconDataOption(){
    $.ajax({
        type: "GET", 
        url : "/getallrecon", 
        beforeSend: (request) =>{
            request.setRequestHeader("X-CSRFToken", $('#csrf_token').val()); 
        }
    })
    .done((resp)=>{
        if(resp['message'] == "success"){
            var listRecon = resp['data']
            $("#exploitInput").append($("<option>").html(''));
            for(var i = 0; i < listRecon.length; i++){
                var recon = listRecon[i]; 
                var option = $("<option>"); 
                option.attr('id', recon['_id']); 
                option.text(recon['target_ip'] + "  ("+recon['date_end']+")"); 
                $("#exploitInput").append(option);
            }
        }
    })
}
function renderExploitTools(){
    $.ajax({
        type: "POST", 
        url : "/getalltool", 
        data: {"module_name": "Module_Exploit"}, 
        beforeSend: (request) =>{
            request.setRequestHeader("X-CSRFToken", $('#csrf_token').val()); 
        }
    })
    .done((resp)=>{
        if(resp['message'] == 'success'){
            var listExtension = resp['data'];
            $("#SelectedToolsExploit").html(''); 
            var obj = $('<input />'); 
            obj.attr('type', 'checkbox'); 
            obj.attr('class', 'selectall');
            var wrapper = $('<label />'); 
            wrapper = $('<label />').append(obj);
            var text = $('<span > '); 
            text.attr("class", 'select-text'); 
            text.text('Select'); 
            wrapper.append(text) ;
            wrapper.append(" all")
            var a  = $('<a href="#" />').append(wrapper)
            var extension = $('<li />').append(a);  
            $("#SelectedToolsExploit").append(extension); 
            for(var i = 0; i < listExtension.length; i ++){
                extension = listExtension[i]; 
                var name = extension['name']; 
                obj = $('<input />'); 
                obj.attr('type', 'checkbox'); 
                obj.attr('name', 'options[]'); 
                obj.attr('class', 'option justone');
                obj.attr('id','check');  
                obj.attr('value', name); 
                var wrapper = $('<label />'); 
                wrapper = $('<label />').append(obj);
                wrapper.append(name) ;
                var a  = $('<a href="#" />').append(wrapper)
                var extension = $('<li />').append(a);  
                $("#SelectedToolsExploit").append(extension);
            }
        }
    })
}

$(document).on("change", ".selectall", function () {
    ToolsExploit = [];
    if ($(this).is(':checked')) {
        $('.option').prop('checked', true);
        var total = $('input[name="options[]"]:checked').length;
        $('input[name="options[]"]:checked').each(function(){
            ToolsExploit.push($(this).val()); 
        });
        $(".dropdown-text-tools").html('(' + total + ') Selected');
        $(".select-text").html(' Deselect');
    } else {
        $('.option').prop('checked', false);
        $(".dropdown-text-tools").html('Chọn công cụ khai thác');
        $(".select-text").html(' Select');
    }
  }); 
$(document).on("change", "input[type='checkbox'].justone", function () {
    ToolsExploit = []; 
    var a = $("input[type='checkbox'].justone");

    if(a.length == a.filter(":checked").length){
        $('.selectall').prop('checked', true);
        $(".select-text").html(' Deselect');
    }
    else {
        $('.selectall').prop('checked', false);
        $(".select-text").html(' Select');
    }
  var total = $('input[name="options[]"]:checked').length;
  if(total == 0 ){
    $(".dropdown-text-tools").html("Chọn công cụ khai thác");
  }else { 
    $(".dropdown-text-tools").html('(' + total + ') Selected');
  }
  $('input[name="options[]"]:checked').each(function(){
    ToolsExploit.push($(this).val()); 
  });
});


$("#exploitInput").on("click","option",function(){
    var option = $(this); 
    if(option.text() == ""){
        Recon_input = ""; 
        $(".dropdown-text-input").text("Chọn kết quả thu thập thông tin"); 
    }else{
        Recon_input = $(this).attr("id"); 
        $(".dropdown-text-input").text(option.text()); 
    }
    
})
$("#exploitManagerTab").on('click', function(){
    $.ajax({
        type: "GET", 
        url : "/getallexploit", 
        beforeSend: (request) =>{
            request.setRequestHeader("X-CSRFToken", $('#csrf_token').val()); 
        }
    })
    .done((resp) =>{
        if(resp['message'] == 'success'){
            console.log(resp['data']); 
            $("#exploitResultManagerTable").DataTable().clear().destroy();
            $("#exploitResultManagerTable").DataTable({
                data: resp['data'],
                "language": {
                "search": "Tìm kiếm ", 
                "emptyTable": "Không có dữ liệu hiển thị", 
                "info": "Hiển thị trang _PAGE_/_PAGES_", 
                "infoFiltered":   "(Lọc từ tổng cộng _MAX_ đầu vào)",
                "infoEmpty": "Hiển thị trang 0/0", 
                "lengthMenu": "Hiển thị _MENU_ hàng", 
                "paginate": {
                    "previous": "Trang trước", 
                    'next': "Trang sau", 
                }
                }, 
                "autoWidth": false,
                rowId: '_id_process', 
                columns: [
                    { data: "target_ip" },
                    { data: "date_start" },
                    { data: "date_end" }, 
                    {
                    className: "dt-center editor-delete",
                    defaultContent: '<button id="exploitDetail" class="btn btn-primary">Chi tiết</button><button id="exploitDelete" class="btn btn-danger ml-3" >Xóa</button>',
                    orderable: false
                    }
                ]
            })
        }
    })
})
function renderExploitDetailModal(id_process){
    $.ajax({
        type: "POST", 
        url : "/getexploitdetail", 
        data:{"_id_process": id_process}, 
        beforeSend: (request) =>{
            request.setRequestHeader("X-CSRFToken", $('#csrf_token').val()); 
        }
    })
    .done((resp) =>{
        if(resp['message'] == 'success'){
            exploit_id = resp['data']['_id'];
            $("#VulDetailTableBody").html(''); 
            if("EXPLOIT_POCS" in resp['data']){
                var list_cve = resp['data']['EXPLOIT_POCS']; 
                for(var i=0; i< list_cve.length; i++){
                    var cve = list_cve[i]; 
                    var row = $("<tr>").attr("class", "POC"); 
                    row.append($("<td>").text(cve['app_name'])); 
                    row.append($("<td>").text(cve['created']));
                    row.append($("<td>").jsonPresenter({
                        json: cve['result']
                    })); 
                    row.append($("<td>").html('<button id="exploitShell" class="btn btn-danger ml-3" >Khai thác</button>'));
                    $("#VulDetailTableBody").append(row);
                }
            }
            if("EXPLOIT_METASPLOIT_AI" in resp['data']){
                var list_payload = resp['data']['EXPLOIT_METASPLOIT_AI'];
                for(var i=0; i< list_payload.length; i++){
                    var payload = list_payload[i]; 
                    var row = $("<tr>").attr("class","METASPLOIT"); 
                    row.append($("<td>").text(payload['prod_name'])); 
                    row.append($("<td>").text(payload['created']));
                    row.append($("<td>").jsonPresenter({
                        json: payload
                      })); 
                    row.append($("<td>").html('<button id="exploitShell" class="btn btn-danger ml-3" >Khai thác</button>'));
                    $("#VulDetailTableBody").append(row);
                }
            }
            $(".exportReport").attr("id", exploit_id); 
            id_process_detail = id_process; 
            $("#VulDetailModal").modal("show"); 
        }
    })
}

$(".exportReport").on('click', function(e){
    var module_id = $(e.currentTarget).attr("id"); 
    var module = []; 
    module[0] = "OutputReport"; 
    $.ajax({
        type: "POST", 
        url : "/run", 
        data : {"Module_Exploit": module_id,"db_process": id_process_detail, "Module": module}, 
        beforeSend: (request) =>{
            request.setRequestHeader("X-CSRFToken", $('#csrf_token').val()); 
        }
    })
    .done((resp) => {
    if(resp['message'] == "success"){
        window.location.href = "/start";
    }
    else{
        new Noty({
        type: 'error', 
        layout: 'topRight',
        theme: 'bootstrap-v4', 
        text: 'Có lỗi xảy ra, hãy thử lại', 
        timeout: 1500, 
        progressBar: false,
        }).show();
    }
    })
})

$("#exploitResultManagerTable").on('click', "#exploitDetail", function(e){
    var row = $(e.currentTarget).closest('tr'); 
    var id_process = row.attr('id');
    renderExploitDetailModal(id_process); 
})
$("#exploitResultManagerTable").on('click', "#exploitDelete", function(e){
    var row = $(e.currentTarget).closest('tr'); 
    var id_process = row.attr('id'); 
    swal({
        title: "Bạn có chắc chắn không?",
        text: "Một khi xóa, kết quả kiểm thử sẽ bị xóa khỏi hệ thống",
        icon: "warning",
        buttons: true,
        dangerMode: true,
    })
    .then((willDelete) => {
        if (willDelete) {
        $.ajax({
            type: "DELETE", 
            url : "/deleteexploit",
            data : {"_id_process":id_process}, 
            beforeSend: (request) =>{
            request.setRequestHeader("X-CSRFToken", $('#csrf_token').val()); 
            }
        })
        .done((resp)=>{
            if(resp['message'] == 'success'){
            $("#exploitResultManagerTable").DataTable().row(row).remove().draw();
            swal("Kết quả thu thập thông tin đã bị xóa!", {
                icon: "success",
            });
            }else{
            swal("Có lỗi xảy ra, hãy thử lại!", {
                icon: "error",
            });
            }
        })
        }
    });
})

$("#StartExploit").on('click', function(){
    $.ajax({
        type: "GET", 
        url : "/getconfigdata", 
        beforeSend: (request) =>{
          request.setRequestHeader("X-CSRFToken", $('#csrf_token').val()); 
        }
    })
    .done((resp)=>{
        if(resp['message'] == false){
           
            swal({
                title: "Chưa cấu hình cài đặt!",
                text: "Bạn hãy cấu hình server trước khi thực hiện kiểm thử!",
                icon: "error",
                buttons: true
              })
              .then((willDelete) => {
                if (willDelete) {
                  window.location.href = "/setting";  
                }
              });
        }
        if(resp['message'] == true){
            var Module_Recon = Recon_input; 
            if(Module_Recon == "" || typeof Module_Recon === "undefined"){
                swal("Bạn chưa chọn kết quả thu thập thông tin!", {
                    icon: "error",
                });
            }else{
                if(ToolsExploit.length === 0){
                    swal("Bạn chưa chọn công cụ khai thác!", {
                        icon: "warning",
                    });
                }
                $.ajax({
                    type: "POST", 
                    url : "/run", 
                    data : {"Module_Reconnaissance":Module_Recon, "Module":ToolsExploit}, 
                    beforeSend: (request) =>{
                    request.setRequestHeader("X-CSRFToken", $('#csrf_token').val()); 
                    }
                })
                .done((resp)=>{
                    if(resp['message'] == "success"){
                        window.location.href = "/start"; 
                    }else{
                        new Noty({
                            type: 'error', 
                            layout: 'topRight',
                            theme: 'bootstrap-v4', 
                            text: 'Có lỗi xảy ra, hãy thử lại!', 
                            timeout: 1500, 
                            progressBar: false,
                        }).show();
                    }
                })
            }
        }

    })
    
})

$("#VulDetailTable").on('click',"#exploitShell", function(e){
    var row = $(e.currentTarget).closest('tr'); 
    var type_of_exploit = row.attr('class'); 
    var data_send = {}; 
    if(type_of_exploit == "POC"){
        var POC = row.find("td:first-child").text(); 
        data_send['POC'] = POC; 
    }
    if(type_of_exploit == "METASPLOIT"){
        data_send['METASPLOIT'] = "OutputMetasploit"; 

    }
    data_send["Module_Exploit"] = exploit_id; 
    $.ajax({
        type: "POST", 
        url : "/runshell", 
        data:data_send, 
        beforeSend: (request) =>{
            request.setRequestHeader("X-CSRFToken", $('#csrf_token').val()); 
        }
    })
    .done((resp) =>{
        if(resp['message'] == "success"){
            var process_id = resp['data']['_id']
            window.location.href = "/shell#" + process_id; 
        }
    })
})