from flask import Flask, render_template, request, session, jsonify, redirect, url_for,escape, Blueprint
from functools import wraps
import requests
from .. import const

Exploit = Blueprint('Exploit', __name__)

def login_required(func): 
    @wraps(func)
    def wrapper(*args, **kwargs): 
        if not "logged_in" in session: 
            return redirect(url_for('Login.login'))
        elif not session['logged_in']: 
            return redirect(url_for('Login.login'))
        else: 
            return func(*args, **kwargs)
    wrapper.__name__ = func.__name__
    return wrapper
@Exploit.route('/khaithac')
@login_required
def shell(): 
    return render_template('shell.html')

@Exploit.route("/exploit", methods=['GET'])
@login_required
def exploit(): 
    return render_template("exploit.html")

@Exploit.route('/getallexploit', methods=['GET'])
@login_required
def get_all_exploit_request(): 
    res = requests.get(const.PUBLIC_API + "/api/v2/exploit/getall")
    return res.json()

@Exploit.route("/getexploitdetail", methods=['POST'])
@login_required
def get_detail_expploit_request(): 
    if "process_id" in request.form:
        param = {
            "process_id": request.form['process_id']
        }
        res = requests.post(const.PUBLIC_API + "/api/v2/exploit/get", data=param)
        return res.json()